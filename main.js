!function(){"use strict";class e{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const s=document.createElement("div");s.classList.add("cell","map-tile","map-tile-"+(t=e,a=this.boardSize,0===t?"top-left":t<a-1?"top":t===a-1?"top-right":t%a==0&&t!==a*(a-1)?"left":t%a==7&&t!==a*a-1?"right":t===a*(a-1)?"bottom-left":t===a*a-1?"bottom-right":t>a*(a-1)&&t<a*a-1?"bottom":"center")),s.addEventListener("mouseenter",this.onCellEnter.bind(this)),s.addEventListener("mouseleave",this.onCellLeave.bind(this)),s.addEventListener("click",this.onCellClick.bind(this)),this.boardEl.appendChild(s)}var t,a;this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const a of e){const e=this.boardEl.children[a.position],s=document.createElement("div");s.classList.add("character",a.character.type);const i=document.createElement("div");i.classList.add("health-level");const l=document.createElement("div");l.classList.add("health-level-indicator","health-level-indicator-"+((t=a.character.health)<15?"critical":t<50?"normal":"high")),l.style.width=`${a.character.health}%`,i.appendChild(l),s.appendChild(i),e.appendChild(s)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((a=>{const s=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),s.appendChild(i),i.addEventListener("animationend",(()=>{s.removeChild(i),a()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}class t{constructor(e){this.characters=new Set,this.add(e)}add(e){if(e.length<1)throw new Error("No arguments were passed to the constructor of the Team class");e.forEach((e=>{this.characters.add(e)}))}toArray(){if(this.characters.size<1)throw new Error("В команде нет персонажей");const e=[];return this.characters.forEach((t=>{e.push(t)})),e}}class a{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"generic";if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,"Character"===new.target.name)throw new Error("it is forbidden to use new Character")}levelUp(){this.level+=1,this.attack=Math.floor(Math.max(this.attack,this.attack*(80+this.health)/100)),this.defence=Math.floor(Math.max(this.defence,this.defence*(80+this.health)/100)),this.health+80>100?this.health=100:this.health+=80}}class s extends a{constructor(e){super(e,"bowman"),this.attack=25,this.defence=25,this.rangeTravel=2,this.rangeAttacks=2}}class i extends a{constructor(e){super(e,"magician"),this.attack=10,this.defence=40,this.rangeTravel=1,this.rangeAttacks=4}}class l extends a{constructor(e){super(e,"daemon"),this.attack=10,this.defence=10,this.rangeTravel=1,this.rangeAttacks=4}}class r extends a{constructor(e){super(e,"swordsman"),this.attack=40,this.defence=10,this.rangeTravel=4,this.rangeAttacks=1}}class n extends a{constructor(e){super(e,"vampire"),this.attack=25,this.defence=25,this.rangeTravel=2,this.rangeAttacks=2}}class h extends a{constructor(e){super(e,"undead"),this.attack=40,this.defence=10,this.rangeTravel=4,this.rangeAttacks=1}}function*c(e,t){for(;;){const a=e[Math.floor(Math.random()*e.length)],c=Math.floor(Math.random()*t+1);"Bowman"===a?yield new s(c):"Magician"===a?yield new i(c):"Swordsman"===a?yield new r(c):"Daemon"===a?yield new l(c):"Vampire"===a?yield new n(c):"Undead"===a&&(yield new h(c))}}function o(e,t,a){const s=[];for(let i=0;i<a;i+=1)s.push(c(e,t).next().value);return s}class d{constructor(e,t){if(!(e instanceof a))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}var m="pointer",g="crosshair",u="not-allowed";function f(e,t,a,s){let i=[],l=[];const r=[];let n,h;for(let e=0;e<s;e+=1){r[e]=[];for(let t=0;t<s;t+=1)r[e][t]=e*s+t,r[e][t]===a&&(n=e,h=t)}for(let t=-e;t<=e;t+=1)n+t>=0&&n+t<s&&i.push(r[n+t][h]),h+t>=0&&h+t<s&&i.push(r[n][h+t]),n+t>=0&&n+t<s&&h+t>=0&&h+t<s&&i.push(r[n+t][h+t]),n-t>=0&&n-t<s&&h+t>=0&&h+t<s&&i.push(r[n-t][h+t]);let c=null,o=null;for(let e=-t;e<=t;e+=1)null===c&&(c=[n+e,h+e]),o=[n+e,h+e];function d(){const e=[];for(var t=arguments.length,a=new Array(t),i=0;i<t;i++)a[i]=arguments[i];return a.forEach((t=>{t<0?e.push(0):t>=s?e.push(s-1):e.push(t)})),e}c=d(...c),o=d(...o);for(let e=c[0];e<=o[0];e+=1)for(let t=c[1];t<=o[1];t+=1)l.push(r[e][t]);return i=i.filter((e=>a!==e)),l=l.filter((e=>a!==e)),[i,l]}class v{static from(e){return e.gameLevel>4&&(e.state="gameOver"),e}}var p={1:"prairie",2:"desert",3:"arctic",4:"mountain"};let C=[];function T(e,t,a){if(!C.length)for(let t=0;t<e.length;t+=1)for(let s=0;s<a;s+=1)C.push(s*a+e[t]);const s=Math.floor(Math.random()*C.length),i=C[s];return C.splice(s,1),t&&(C=[]),i}const y=new e;y.bindToDOM(document.querySelector("#game-container"));const w=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),L=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.selectedCharacter=this.gamePlay.cells.findIndex((e=>e.classList.contains("selected-yellow"))),this.gameState=null}init(){if(null===this.gameState&&(this.gameState=v.from({gameLevel:1,state:"active",balls:0,loadSave:!1})),"active"===this.gameState.state){if(this.gamePlay.drawUi(p[this.gameState.gameLevel]),this.gameState.loadSave)this.arrAllTeams=this.gameState.allTeams;else{if(1===this.gameState.gameLevel){const e=new t(o(["Magician","Swordsman","Bowman"],1,2)),a=new t(o(["Vampire","Undead","Daemon"],1,2));this.lightTeam=e.toArray().map(((t,a)=>new d(t,T([0,1],e.characters.size-1===a,this.gamePlay.boardSize)))),this.darkTeam=a.toArray().map(((e,t)=>new d(e,T([6,7],a.characters.size-1===t,this.gamePlay.boardSize)))),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addNewGameListener(this.onNewGameClick.bind(this)),this.gamePlay.addSaveGameListener(this.onSaveGameClick.bind(this)),this.gamePlay.addLoadGameListener(this.onLoadGameClick.bind(this))}else{const e=new t(o(["Magician","Swordsman","Bowman"],1,2));for(let t=0;t<this.gameState.gameLevel-1;t+=1)e.toArray().forEach((e=>e.levelUp()));this.lightTeam.forEach((t=>{e.add([t.character])})),this.lightTeam=e.toArray().map(((t,a)=>new d(t,T([0,1],e.characters.size-1===a,this.gamePlay.boardSize))));const a=new t(o(["Vampire","Undead","Daemon"],1,this.lightTeam.length));for(let e=0;e<this.gameState.gameLevel-1;e+=1)a.toArray().forEach((e=>e.levelUp()));this.darkTeam=a.toArray().map(((e,t)=>new d(e,T([6,7],a.characters.size-1===t,this.gamePlay.boardSize))))}this.arrAllTeams=this.lightTeam.concat(this.darkTeam),this.gameState.allTeams=this.arrAllTeams}this.gamePlay.redrawPositions(this.arrAllTeams),this.gameState.loadSave=!1}}onCellClick(t){if("active"===this.gameState.state){const a=event.currentTarget.firstElementChild;if(null!==a)if(this.splitByTeams(),-1!==this.selectedCharacter&&this.gamePlay.deselectCell(this.selectedCharacter),/bowman|swordsman|magician/.test(a.className)){this.selectedCharacter=t,this.gamePlay.selectCell(t);const e=this.arrAllTeams.find((e=>e.position===t)).character||null;null!==e&&([this.arrayAvailableCells,this.arrayAvailableCellsAttack]=f(e.rangeTravel,e.rangeAttacks,t,this.gamePlay.boardSize))}else if(/vampire|undead|daemon/.test(a.className)&&this.selectedCharacter>0)if(this.arrayAvailableCellsAttack.includes(t)){const e=this.arrAllTeams.findIndex((e=>e.position===this.selectedCharacter)),a=this.arrAllTeams.findIndex((e=>e.position===t));if(e>=0&&a>=0){const s=this.arrAllTeams[e].character,i=this.arrAllTeams[a].character,l=Math.floor(Math.max(s.attack-i.defence,.1*s.attack));i.health-=l,this.gamePlay.showDamage(t,l).then((()=>{this.checkingTheVictoryConditions(),this.feindlicheAktion(),this.gamePlay.redrawPositions(this.arrAllTeams)}))}this.gamePlay.selectCell(this.selectedCharacter)}else e.showError("enemy");if(this.selectedCharacter>=0&&this.arrayAvailableCells.includes(t)&&null===a){const e=this.arrAllTeams.findIndex((e=>e.position===this.selectedCharacter));e>=0&&(this.arrAllTeams[e].position=t,this.gamePlay.deselectCell(this.selectedCharacter),this.selectedCharacter=t,this.gamePlay.redrawPositions(this.arrAllTeams),this.onCellClick(t),this.checkingTheVictoryConditions(),this.feindlicheAktion())}this.gameState.allTeams=this.arrAllTeams}}onCellEnter(e){if("active"===this.gameState.state&&(-1===this.selectedCharacter?event.currentTarget.style.cursor=u:this.arrayAvailableCells.includes(e)&&!event.currentTarget.hasChildNodes()?(event.currentTarget.style.cursor=m,this.gamePlay.selectCell(e,"green")):event.currentTarget.style.cursor=u,event.currentTarget.hasChildNodes())){const t=this.arrAllTeams.find((t=>t.position===e)).character||null;if(t){const a=function(e){return`🎖${e.level}⚔${e.attack} 🛡 ${e.defence} ❤${e.health}`}(t);this.gamePlay.showCellTooltip(a,e),/bowman|swordsman|magician/.test(t.type)?event.currentTarget.style.cursor=m:/vampire|undead|daemon/.test(t.type)&&this.arrayAvailableCellsAttack&&this.arrayAvailableCellsAttack.includes(e)&&this.selectedCharacter>0&&(event.currentTarget.style.cursor=g,this.gamePlay.selectCell(e,"red"))}}}onCellLeave(e){"active"===this.gameState.state&&(event.currentTarget.hasChildNodes()&&this.gamePlay.hideCellTooltip(e),e!==this.selectedCharacter&&this.gamePlay.deselectCell(e))}feindlicheAktion(){if(this.darkTeam.length>0&&this.lightTeam.length>0){const e=this.darkTeam[Math.floor(Math.random()*this.darkTeam.length)].position,t=this.arrAllTeams.findIndex((t=>t.position===e)),[a,s]=f(this.arrAllTeams[t].character.rangeTravel,this.arrAllTeams[t].character.rangeAttacks,e,this.gamePlay.boardSize),i=this.lightTeam.find((e=>s.includes(e.position)))||null;if(i){const l=this.arrAllTeams[t].character,r=this.arrAllTeams[this.arrAllTeams.findIndex((e=>e.position===i.position))].character,n=Math.floor(Math.max(l.attack-r.defence,.1*l.attack));r.health-=n,this.gamePlay.showDamage(i.position,n).then((()=>{this.gamePlay.redrawPositions(this.arrAllTeams)}))}else{const h=c(this.arrAllTeams);function c(e){let t=a[Math.floor(Math.random()*a.length)];return e.some((e=>e.position===t))&&(t=c(e)),t}this.arrAllTeams[t].position=h,this.gamePlay.redrawPositions(this.arrAllTeams)}this.splitByTeams(),this.checkingTheVictoryConditions(),this.gameState.allTeams=this.arrAllTeams}}checkingTheVictoryConditions(){const e=this.arrAllTeams.findIndex((e=>e.character.health<=0));e>=0&&(this.arrAllTeams[e].position===this.selectedCharacter&&(this.gamePlay.deselectCell(this.arrAllTeams[e].position),this.selectedCharacter=-1),this.gamePlay.hideCellTooltip(this.arrAllTeams[e].position),this.gamePlay.deselectCell(this.arrAllTeams[e].position),this.arrAllTeams.splice(e,1),this.gameState.allTeams=this.arrAllTeams,this.gamePlay.redrawPositions(this.arrAllTeams)),this.splitByTeams(),this.lightTeam.length<=0&&(this.gameState.state="gameOver"),this.darkTeam<=0&&(this.arrAllTeams.forEach((e=>{e.character.levelUp()})),this.gameState.gameLevel+=1,this.gameState.gameLevel>4&&(this.gameState.state="gameOver"),this.init())}splitByTeams(){this.darkTeam=[],this.lightTeam=[],this.arrAllTeams.forEach((e=>{/vampire|undead|daemon/.test(e.character.type)?this.darkTeam.push(e):this.lightTeam.push(e)}))}onNewGameClick(){this.gameState=null,this.gamePlay.cellClickListeners=[],this.gamePlay.cellEnterListeners=[],this.gamePlay.cellLeaveListeners=[],this.gamePlay.newGameListeners=[],this.gamePlay.saveGameListeners=[],this.gamePlay.loadGameListeners=[],this.init()}onSaveGameClick(){this.stateService.save(this.gameState)}onLoadGameClick(){this.gameState=this.stateService.load(),this.gameState.allTeams.forEach((e=>{const t=function(e){let t;switch(e){case"bowman":t=new s(1).__proto__;break;case"magician":t=new i(1).__proto__;break;case"daemon":t=new l(1).__proto__;break;case"swordsman":t=new r(1).__proto__;break;case"vampire":t=new n(1).__proto__;break;case"Undead":t=new h(1).__proto__}return t}(e.character.type);e.character.__proto__=t})),this.gameState.loadSave=!0,this.init()}}(y,w);L.init()}();